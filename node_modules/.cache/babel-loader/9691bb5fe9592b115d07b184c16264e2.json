{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIT\\\\goit-react-hw-01-components\\\\src\\\\components\\\\Statistics\\\\Statistics.jsx\";\nimport PropTypes from 'prop-types';\nimport css from './Statistics.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction randomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nexport const Statistics = _ref => {\n  let {\n    title,\n    stats\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: css.statistics,\n    children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: css.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: css.statList,\n      children: stats.map(_ref2 => {\n        let {\n          id,\n          label,\n          percentage\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: css.item,\n          style: {\n            backgroundColor: randomHexColor()\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: css.label,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: css.percentage,\n            children: [percentage, \" %\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistics;\nStatistics.prototype = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  })).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["D:/GoIT/goit-react-hw-01-components/src/components/Statistics/Statistics.jsx"],"names":["PropTypes","css","randomHexColor","Math","floor","random","toString","Statistics","title","stats","statistics","statList","map","id","label","percentage","item","backgroundColor","prototype","string","arrayOf","shape","isRequired","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;;AAEA,SAASC,cAAT,GAA0B;AACxB,SAAQ,IAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAkD,EAA7D;AACD;;AAED,OAAO,MAAMC,UAAU,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AAC9C,sBACE;AAAS,IAAA,SAAS,EAAER,GAAG,CAACS,UAAxB;AAAA,eACGF,KAAK,iBAAI;AAAI,MAAA,SAAS,EAAEP,GAAG,CAACO,KAAnB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YADZ,eAGE;AAAI,MAAA,SAAS,EAAEP,GAAG,CAACU,QAAnB;AAAA,gBACGF,KAAK,CAACG,GAAN,CAAU,SAA+B;AAAA,YAA9B;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,KAAN;AAAaC,UAAAA;AAAb,SAA8B;AACxC,4BACE;AACE,UAAA,SAAS,EAAEd,GAAG,CAACe,IADjB;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAEf,cAAc;AAAjC,WAHT;AAAA,kCAKE;AAAM,YAAA,SAAS,EAAED,GAAG,CAACa,KAArB;AAAA,sBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAM,YAAA,SAAS,EAAEb,GAAG,CAACc,UAArB;AAAA,uBAAkCA,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,WAEOF,EAFP;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXA;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CArBM;KAAMN,U;AAuBbA,UAAU,CAACW,SAAX,GAAuB;AACrBV,EAAAA,KAAK,EAAER,SAAS,CAACmB,MADI;AAErBV,EAAAA,KAAK,EAAET,SAAS,CAACoB,OAAV,CACLpB,SAAS,CAACqB,KAAV,CAAgB;AACdP,IAAAA,KAAK,EAAEd,SAAS,CAACmB,MAAV,CAAiBG,UADV;AAEdP,IAAAA,UAAU,EAAEf,SAAS,CAACuB,MAAV,CAAiBD;AAFf,GAAhB,CADK,EAKLA;AAPmB,CAAvB","sourcesContent":["import PropTypes from 'prop-types';\r\nimport css from './Statistics.module.css';\r\n\r\nfunction randomHexColor() {\r\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n}\r\n\r\nexport const Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={css.statistics}>\r\n      {title && <h2 className={css.title}>{title}</h2>}\r\n\r\n      <ul className={css.statList}>\r\n        {stats.map(({ id, label, percentage }) => {\r\n          return (\r\n            <li\r\n              className={css.item}\r\n              key={id}\r\n              style={{ backgroundColor: randomHexColor() }}\r\n            >\r\n              <span className={css.label}>{label}</span>\r\n              <span className={css.percentage}>{percentage} %</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.prototype = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}